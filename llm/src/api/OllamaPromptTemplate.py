# Import the necessary classes
from fastapi import HTTPException
from langchain_core.prompts import ChatPromptTemplate
from llm.src.conf.Prompts import default_prompt1
from llm.src.utilities.OllamaPipeline import OllamaPipeline
from llm.src.conf.Configurations import logger
import PyPDF2


def qa_with_ollama(context: str, questions: list[str]):
    """
    Perform question answering using the Ollama model.

    Args:
        context (str): The context in which to answer the question.
        questions (list[str]): A list of questions to be answered.

    Returns:
        list[str]: A list of answers generated by the Ollama model.

    Raises:
        HTTPException: If an error occurs during model invocation.
    """

    # Load the Ollama model
    model = OllamaPipeline().get_model()
    logger.info("Model initialized.")

    pre_prompt = f"""{default_prompt1}"""

    # Define the prompt template
    template = """CONTEXT:{context}

    Question: {question}

    Answer: Just give a simple and precise answer. If the answer cannot be found in the context, respond with "Answer not found in context"."""
    prompt = ChatPromptTemplate.from_template(template)


    # Invoke the chain with a question
    try:

        response = []

        for question in questions:
            # Format the prompt with the question input
            formatted_prompt = prompt.format_prompt(question=question, context=context)

            # Directly invoke the model with the formatted prompt
            logger.info("invoking the model with the formatted prompt")
            simple_response = model.invoke(formatted_prompt)
            logger.info("response received from the model")

            response.append(simple_response)

        return response

    except Exception as e:

        raise HTTPException(status_code=500, detail=f"An error occurred during invocation: {e}")


if __name__ == "__main__":

    pdf_text = ''
    with open(r"C:\Docs\Doc1.pdf", 'rb') as pdf_file:
        pdf_reader = PyPDF2.PdfReader(pdf_file)
        pdf_text += str(pdf_reader.metadata)
        for page_num in range(min(1, len(pdf_reader.pages))):
            page = pdf_reader.pages[page_num]
            pdf_text += page.extract_text()

    QUESTIONS = ["What is the title of the document?", "What is the creation date of the document?",
                 "What is the version of the document?", "Does the document has CDRL number?",
                 "Who is the authorizing agent of the document?"]

    res = qa_with_ollama(pdf_text, QUESTIONS)

    print(res)





